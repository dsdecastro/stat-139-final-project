par(mfrow=c(3,2), mar=c(0,0,0,0), cex=0.5)
plot(log(total.cases + epsilon) ~ tuition, data=full.cases,
main="tuition")
plot(log(total.cases + epsilon) ~ total.headcount, data=full.cases,
main="total.headcount")
plot(log(total.cases + epsilon) ~ percent.american.native, data=full.cases,
main="percent.american.native")
plot(log(total.cases + epsilon) ~ percent.asian, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.black, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.hispanic.latino, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ percent.pacific.islander, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.white, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.two.more.races, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.women, data=full.cases)
plot(log(total.cases + epsilon) ~ grad.rate, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.fin.aid, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ gap20repub, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.student.loan, data=full.cases)
plot(log(total.cases + epsilon) ~ mask.mandated.days, data=full.cases)
par(mfrow=c(3,2), mar=1.5 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ tuition, data=full.cases,
main="tuition")
plot(log(total.cases + epsilon) ~ total.headcount, data=full.cases,
main="total.headcount")
plot(log(total.cases + epsilon) ~ percent.american.native, data=full.cases,
main="percent.american.native")
plot(log(total.cases + epsilon) ~ percent.asian, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.black, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.hispanic.latino, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ percent.pacific.islander, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.white, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.two.more.races, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.women, data=full.cases)
plot(log(total.cases + epsilon) ~ grad.rate, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.fin.aid, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ gap20repub, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.student.loan, data=full.cases)
plot(log(total.cases + epsilon) ~ mask.mandated.days, data=full.cases)
lm6 <- lm(log(cases + epsilon) ~ religious + tuition + log(total.headcount) +
log(percent.american.native) + log(percent.asian) +
log(percent.black) + log(percent.hispanic.latino) +
log(percent.pacific.islander) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+1) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
lm6 <- lm(log(cases + epsilon) ~ religious + tuition + log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+1) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm6$residuals ~ lm6$fitted.values)
abline(h=0, col="gray")
lm6 <- lm(log(cases + epsilon) ~ religious + tuition + log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm6$residuals ~ lm6$fitted.values)
abline(h=0, col="gray")
lm7 <- lm(log(total.cases + epsilon) ~ religious + tuition + log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm7$residuals ~ lm7$fitted.values)
abline(h=0, col="gray")
lm6 <- lm(log(cases + epsilon) ~ religious + tuition +
log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm6$residuals ~ lm6$fitted.values)
abline(h=0, col="gray")
lm6 <- lm(log(cases + epsilon) ~ religious + tuition +
log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + #percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm6$residuals ~ lm6$fitted.values)
abline(h=0, col="gray")
install.packages("sandwich")
library(sandwich)
vcov.robust = vcovHC(lm6, type="HC")
diag(vcov.robust)
data.frame(ols=round(summary(lm6)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4))
library(sandwich)
vcov.robust = vcovHC(lm6, type="HC")
diag(vcov.robust)
data.frame(ols=round(summary(lm6)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4))
vcov.robust = vcovHC(lm6, type="HC")
data.frame(ols=round(summary(lm6)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4),
diff=round(abs(sqrt(diag(vcov.robust)) -
summary(lm6)$coef[,'Std. Error'])),4)
vcov.robust = vcovHC(lm6, type="HC")
data.frame(ols=round(summary(lm6)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4),
diff=round(abs(sqrt(diag(vcov.robust)) -
summary(lm6)$coef[,'Std. Error']),4))
vcov.robust = vcovHC(lm7, type="HC")
data.frame(ols=round(summary(lm7)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4),
diff=round(abs(sqrt(diag(vcov.robust)) -
summary(lm7)$coef[,'Std. Error']),4))
lm8 <- lm(log(total.cases + epsilon) ~ religious + tuition +
log(total.headcount+epsilon) + log(total.headcount+epsilon):religious +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm8$residuals ~ lm8$fitted.values, main="total.cases")
abline(h=0, col="gray")
install.packages("modelsummary")
library(modelsummary)
modelsummary(c(lm6, lm7))
modelsummary(lm6)
modelsummary(lm6)
summary(lm6)
modelsummary(list(lm6=lm6, lm7=lm7))
?modelsummary
modelsummary(list(lm6=lm6, lm7=lm7), est="[{conf.low},{conf.high}]")
modelsummary(list(lm6=lm6, lm7=lm7), statistic="{p.value}, [{conf.low},{conf.high}]")
modelsummary(list(lm6=lm6, lm7=lm7), statistic="{p.value}, [{conf.low},{conf.high}]",
vcov="HC")
modelsummary(list("basic, 2020 only"=lm6, "basic, 2020 and 2021"=lm7), statistic="{p.value}, [{conf.low},{conf.high}]",
vcov="HC")
lm6.both.only <- lm(formula(lm6),
data=full.cases[!is.na(full.cases$cases_2021),])
lm6.twenty.only <- lm(formula(lm6),
data=full.cases[is.na(full.cases$cases_2021),])
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only))
lm6.both.only <- lm(formula(lm6),
data=full.cases[!is.na(full.cases$cases_2021),])
lm6.twenty.only <- lm(formula(lm6),
data=full.cases[is.na(full.cases$cases_2021),])
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
statistic="{p.value}, [{conf.low},{conf.high}]")
plot(lm6)
only.twenty = full.cases[is.na(full.cases$cases_2021),]
only.twenty = full.cases[is.na(full.cases$cases_2021),]
table(only.twenty$religious)
table(only.twenty$private)
hist(only.twenty$total.headcount)
hist(only.twenty$gap20repub)
t.test(both$gap20repub, only.twenty$gap20repub)
both <- full.cases[!is.na(full.cases$cases_2021),]
t.test(both$gap20repub, only.twenty$gap20repub)
t.test(both$total.headcount, only.twenty$total.headcount)
z.test(both$private, only.twenty$private)
prop.test(both$private, only.twenty$private)
prop.test(x=c(both$private == "Yes", only.twenty$private == "Yes"),
n=c(length(both$private), length(only.twenty$private)))
sum(is.na(both$private))
sum(is.na(only.twenty$private))
?prop.test
matrix(c(both$private == "Yes", both$private == "No", only.twenty$private == "Yes", only.twenty$private == "No"), nrow=2, byrow=T)
matrix(c(sum(both$private == "Yes"), sum(both$private == "No"), sum(only.twenty$private == "Yes"), sum(only.twenty$private == "No")), nrow=2, byrow=T)
prop.test(x=matrix(c(sum(both$private == "Yes"), sum(both$private == "No"),
sum(only.twenty$private == "Yes"),
sum(only.twenty$private == "No")), nrow=2, byrow=T),
n=c(length(both$private), length(only.twenty$private)))
unique(full.cases$religious)
prop.test(x=matrix(c(sum(both$religious == "Yes"), sum(both$religious == "No"),
sum(only.twenty$religious == "Yes"),
sum(only.twenty$religious == "No")), nrow=2, byrow=T),
n=c(length(both$religious), length(only.twenty$religious)))
prop.test(x=matrix(c(sum(both$on.campus.housing == "Yes"), sum(both$on.campus.housing == "No"),
sum(only.twenty$on.campus.housing == "Yes"),
sum(only.twenty$on.campus.housing == "No")), nrow=2, byrow=T),
n=c(length(both$on.campus.housing), length(only.twenty$on.campus.housing)))
colnames(full.cases)
lm6.both.only <- lm(formula(lm6),
data=full.cases[!is.na(full.cases$cases_2021),])
lm6.twenty.only <- lm(formula(lm6),
data=full.cases[is.na(full.cases$cases_2021),])
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]")
?modelsummary
modelsummary_wide(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]")
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]",
shape="term ~ response")
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]",
shape=term ~ response)
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
#estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]",
shape=term ~ response)
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}, {p.value}, [{conf.low},{conf.high}]",
shape=term ~ model + statistic)
modelsummary(list("all"=lm6, "schools with data for both years"=lm6.both.only,
"schools with only 2020 data"=lm6.twenty.only),
estimate="{estimate}",
statistic="{p.value}, [{conf.low},{conf.high}]",
shape=term ~ model + statistic)
dim(full.cases)
colnames(full.cases)
knitr::opts_chunk$set(echo = FALSE, results=FALSE, messages=FALSE)
library(report)
install.packages("report"); install.packages(rempsync)
install.packages("report"); install.packages("rempsync")
install.packages("rempsync")
Version()
version()
R.Version()
sum(is.na(full.cases$cases_2021))
knitr::opts_chunk$set(echo = FALSE, results=TRUE, messages=FALSE)
library(dplyr)
library(rpart)
library(rpart.plot)
library(randomForest)
library(sandwich)
library(modelsummary)
library(report)
# library(rempsync)
RMSE <- function(y, yhat) {
SSE = sum((y-yhat)^2)
return(sqrt(SSE/length(y)))
}
# Read colleges from csv
colleges <- read.csv("data/colleges.csv")[,-c(1,9)]
# Read ipeds from csv, drop unnecessary columns
ipeds <- read.csv("data/ipeds.csv")
ipeds <- ipeds[-c(3, 8, 22)]
# Rename columns of ipeds
ipeds <- ipeds %>% rename_at('IC2021.Institutional.control.or.affiliation',
~'control') %>%
rename_at('HD2021.FIPS.state.code', ~'FIPS.state.code') %>%
rename_at('unitid', ~'ipeds_id') %>%
rename_at('IC2021.Religious.affiliation',
~'religious.affiliation') %>%
rename_at('DRVIC2021.Tuition.and.fees..2020.21',
~'tuition') %>%
rename_at('DRVEF122021.Total.12.month.unduplicated.headcount',
~'total.headcount') %>%
rename_at('DRVEF122021.Undergraduate.12.month.unduplicated.headcount',
~'undergrad.headcount') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.American.Indian.or.Alaska.Native',
~'percent.american.native') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.Asian',
~'percent.asian') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.Black.or.African.American',
~'percent.black') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.Hispanic.Latino', ~'percent.hispanic.latino') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.Native.Hawaiian.or.Other.Pacific.Islander',
~'percent.pacific.islander') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.White',
~'percent.white') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.two.or.more.races',
~'percent.two.more.races') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.race.ethnicity.unknown', ~'percent.NA.race') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.Nonresident.Alien',
~'percent.nonres.alien') %>%
rename_at('DRVEF122021.Percent.of.12.month.unduplicated.headcount.that.are.women', ~'percent.women') %>%
rename_at('SFA2021.Average.amount.of.grant.and.scholarship.aid.awarded..2020.21', ~'avg.grant.money') %>%
rename_at('DRVGR2021.Graduation.rate..total.cohort', ~'grad.rate') %>%
rename_at('SFA2021.Percent.of.full.time.first.time.undergraduates.awarded.any.financial.aid',
~'percent.fin.aid') %>%
rename_at('SFA2021.Percent.of.full.time.first.time.undergraduates.awarded.student.loans',
~'percent.student.loan') %>%
rename_at('IC2021.Occupational', ~'occupational.degree') %>%
rename_at('IC2021.Academic', ~'academic.degree') %>%
rename_at('IC2021.Adult.basic.remedial.or.high.school.equivalent',
~'hs.equivalent.degree') %>%
rename_at('IC2021.Percent.of.undergraduates..who.are.formally.registered.as.students.with.disabilities..when.percentage.is.more.than.3.percent',
~'percent.disability') %>%
rename_at('IC2021.NCAA.NAIA.conference.number.football',
~'NCAA.football') %>%
rename_at('IC2021.Institution.provide.on.campus.housing',
~'on.campus.housing') %>%
rename_at('IC2021.Total.dormitory.capacity',
~'dorm.capacity') %>%
rename_at('IC2021.Typical.room.charge.for.academic.year',
~'dorm.room.price')
# Merge data frames, and remove duplicated "state" column
md <- merge(ipeds, colleges, by="ipeds_id")[,-32]
# Remove institutions with no ipeds data (a lot of NAs)
md <- md[!(md$control == ""),]
# Create column 'religious'
md$religious <- "Yes"
md[md$religious.affiliation == "Not applicable", ]$religious <- "No"
# Create column 'catholic'
md$catholic <- "No"
md[md$religious.affiliation == "Roman Catholic",]$catholic <- "Yes"
# Create column 'private'
md$private <- "No"
md$private[md$control == "Private not-for-profit (no religious affiliation)" |
md$control == "Private not-for-profit (religious affiliation)"] <-
"Yes"
# Drop column 'control', 'academic.degree', 'dorm.room.price'
md <- md[,-c(4,24,30)]
# Set 'dorm.capacity' to 0 if no on.campus.housing
md$dorm.capacity[md$on.campus.housing == "No"] <- 0
# Write to csv
write.csv(md,'merged_cases.csv')
# Read mask.mandates from CSV file
mask.mandates <- read.csv("data/U.S._State_and_Territorial_Public_Mask_Mandates_From_April_8__2020_through_August_15__2021_by_State_by_Day.csv")
# Convert appropriate columns to factors
factor.variables <- c("Face_Masks_Required_in_Public", "State_Tribe_Territory", "order_code")
mask.mandates[,factor.variables] <- lapply(mask.mandates[,factor.variables], as.factor)
# Convert column 'date' to type Date from string
mask.mandates$date <- as.Date(mask.mandates$date, format="%m/%d/%Y")
# Create new data frame to merge with md
mandates.by.state <- data.frame(state=unique(mask.mandates$State_Tribe_Territory))
# Create and fill column 'mask.mandated.days'
mandates.by.state$mask.mandated.days <- 0
for (i in 1:length(unique(mandates.by.state$state))) {
dummy <- mask.mandates$Face_Masks_Required_in_Public[mask.mandates$State_Tribe_Territory == mandates.by.state$state[i]
& mask.mandates$date >= as.Date("2020/7/1")
& mask.mandates$date <= as.Date("2021/5/26")]
dummy[is.na(dummy)] <- "No"
mandates.by.state$mask.mandated.days[mandates.by.state$state == mandates.by.state$state[i]] = sum(dummy == "Yes")
}
# Add state names to mandates.by.state
mandates.by.state$full_state_name <- c("Alaska", "Alabama", "Arkansas",
"American Samoa", "Arizona",
"California", "Colorado",
"District of Columbia", "Connecticut",
"Florida", "Delaware", "Georgia", "Guam",
"Iowa", "Hawaii", "Idaho", "Illinois",
"Indiana", "Kansas", "Kentucky",
"Louisiana", "Massachusetts",
"Minnesota", "Maryland", "Maine",
"Michigan", "Missouri",
"Northern Mariana Islands",
"Mississippi", "Montana",
"North Carolina", "North Dakota",
"Nebraska", "New Hampshire", "Nevada",
"New Jersey", "New Mexico", "Ohio",
"New York", "Oklahoma", "Oregon",
"South Carolina", "Rhode Island",
"Pennsylvania", "Puerto Rico",
"South Dakota", "Tennessee", "Texas",
"Utah", "Virginia", "Virgin Islands",
"Vermont", "Washington", "Wisconsin",
"West Virginia", "Wyoming")
# Drop state abbreviation column and reorder remaining two columns
mandates.by.state <- mandates.by.state[,c(3,2)]
# Merge md and mandates.by.state data frames on name of state
full.cases <- merge(md, mandates.by.state, by.x="FIPS.state.code",
by.y="full_state_name")
# Create total.cases column
full.cases$total.cases <- full.cases$cases + full.cases$cases_2021
# Convert necessary columns to factors
factor.variables <- c("religious", "FIPS.state.code", "private",
"occupational.degree",
"hs.equivalent.degree", "NCAA.football",
"on.campus.housing", "catholic", "state")
full.cases[,factor.variables] <- lapply(full.cases[,factor.variables], as.factor)
elections.data <- read.csv("data/pres_elections.csv")
voter.gap <- elections.data[,c("state", "gap20repub")]
voter.gap$state[voter.gap$state == "DC"] <- "Washington, D.C."
full.cases <- merge(full.cases, voter.gap, by="state")
write.csv(full.cases, "full_cases.csv")
epsilon <- 1
par(mfrow=c(1,2))
hist(full.cases$total.cases, main="total.cases, untransformed")
hist(log(full.cases$total.cases + epsilon), main="total.cases, log-transformed")
qqnorm(log(full.cases$total.cases + epsilon))
qqline(log(full.cases$total.cases + epsilon))
t.test(log(total.cases + epsilon) ~ religious, data=full.cases)
for.rel.affil <- full.cases[,c("total.cases", "religious.affiliation")]
for.rel.affil <- for.rel.affil[complete.cases(for.rel.affil),]
summary(aov(total.cases ~ religious.affiliation, data=for.rel.affil))
wilcox.test(x = full.cases$total.cases[full.cases$religious == "Yes"],
y = full.cases$total.cases[full.cases$religious == "No"],
alternative='two.sided', exact = FALSE, correct = FALSE,
conf.int = TRUE)
par(mfrow=c(3,2), mar=1.5 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ tuition, data=full.cases,
main="tuition")
plot(log(total.cases + epsilon) ~ total.headcount, data=full.cases,
main="total.headcount")
plot(log(total.cases + epsilon) ~ percent.american.native, data=full.cases,
main="percent.american.native")
plot(log(total.cases + epsilon) ~ percent.asian, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.black, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.hispanic.latino, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ percent.pacific.islander, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.white, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.two.more.races, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.women, data=full.cases)
plot(log(total.cases + epsilon) ~ grad.rate, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.fin.aid, data=full.cases)
par(mfrow=c(3,2), mar=2 * c(1,1,1,1), cex=0.5)
plot(log(total.cases + epsilon) ~ gap20repub, data=full.cases)
plot(log(total.cases + epsilon) ~ percent.student.loan, data=full.cases)
plot(log(total.cases + epsilon) ~ mask.mandated.days, data=full.cases)
par(mfrow=c(4,2), mar=c(1,1,1,1))
plot(log(total.cases + epsilon) ~ log(total.headcount), data=full.cases)
plot(log(total.cases + epsilon) ~ log(percent.american.native), data=full.cases)
plot(log(total.cases + epsilon) ~ log(percent.asian), data=full.cases)
plot(log(total.cases + epsilon) ~ log(percent.black), data=full.cases)
plot(log(total.cases + epsilon) ~ log(percent.hispanic.latino), data=full.cases)
plot(log(total.cases + epsilon) ~ log(percent.pacific.islander), data=full.cases)
plot(log(total.cases + epsilon) ~ log(100-percent.fin.aid+1), data=full.cases)
lm6 <- lm(log(cases + epsilon) ~ religious + tuition +
log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm6$residuals ~ lm6$fitted.values, main="cases")
abline(h=0, col="gray")
vcov.robust = vcovHC(lm6, type="HC")
data.frame(ols=round(summary(lm6)$coef[,'Std. Error'],4),
robust=round(sqrt(diag(vcov.robust)),4),
diff=round(abs(sqrt(diag(vcov.robust)) -
summary(lm6)$coef[,'Std. Error']),4))
lm7 <- lm(log(total.cases + epsilon) ~ religious + tuition +
log(total.headcount+epsilon) +
log(percent.american.native+epsilon) + log(percent.asian+epsilon) +
log(percent.black+epsilon) + log(percent.hispanic.latino+epsilon) +
log(percent.pacific.islander+epsilon) +
percent.white + percent.two.more.races +
percent.women + grad.rate + log(100-percent.fin.aid+epsilon) +
on.campus.housing + gap20repub +
private + percent.student.loan + mask.mandated.days +
occupational.degree + hs.equivalent.degree, data=full.cases)
plot(lm7$residuals ~ lm7$fitted.values, main="total.cases")
abline(h=0, col="gray")
epsilon <- 1
par(mfrow=c(1,2))
hist(full.cases$cases, main="total.cases, untransformed")
hist(log(full.cases$cases + epsilon), main="total.cases, log-transformed")
qqnorm(log(full.cases$cases + epsilon))
qqline(log(full.cases$cases + epsilon))
t.test(log(cases + epsilon) ~ religious, data=full.cases)
for.rel.affil <- full.cases[,c("cases", "religious.affiliation")]
for.rel.affil <- for.rel.affil[complete.cases(for.rel.affil),]
summary(aov(cases ~ religious.affiliation, data=for.rel.affil))
wilcox.test(x = full.cases$cases[full.cases$religious == "Yes"],
y = full.cases$cases[full.cases$religious == "No"],
alternative='two.sided', exact = FALSE, correct = FALSE,
conf.int = TRUE)
epsilon <- 1
par(mfrow=c(2,2))
hist(full.cases$cases, main="2020 cases, untransformed")
hist(log(full.cases$cases + epsilon), main="2020 cases, log-transformed")
hist(full.cases$total.cases, main="total.cases, untransformed")
hist(log(full.cases$total.cases + epsilon), main="total.cases, log-transformed")
epsilon <- 1
par(mfrow=c(2,2))
hist(full.cases$cases, main="2020 cases, untransformed", xlab="2020 cases")
hist(log(full.cases$cases + epsilon), main="2020 cases, log-transformed",
xlab="2020 cases")
hist(full.cases$total.cases, main="total.cases, untransformed",
xlab="total.cases")
hist(log(full.cases$total.cases + epsilon), main="total.cases, log-transformed",
xlab="total.cases")
par(mfrow=c(1,2))
qqnorm(log(full.cases$cases + epsilon))
qqline(log(full.cases$cases + epsilon))
qqnorm(log(full.cases$total.cases + epsilon))
qqline(log(full.cases$total.cases + epsilon))
par(mfrow=c(1,2))
qqnorm(log(full.cases$cases + epsilon), main="Normal Q-Q Plot, 2020 cases")
qqline(log(full.cases$cases + epsilon))
qqnorm(log(full.cases$total.cases + epsilon),
main="Normal Q-Q Plot, total.cases")
qqline(log(full.cases$total.cases + epsilon))
t.test(log(cases + epsilon) ~ religious, data=full.cases)
t.test(log(total.cases + epsilon) ~ religious, data=full.cases)
